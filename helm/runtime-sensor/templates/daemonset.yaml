apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    {{- include "runtime-sensor.labels" . | nindent 4 }}
    control-plane: runtime-sensor
  name: {{ template "runtime-sensor.fullname" . }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      {{- include "runtime-sensor.selectorLabels" . | nindent 6 }}
      control-plane: runtime-sensor
  template:
    metadata:
      annotations:
        snyk/runtime-sensor: "true"
        {{- include "runtime-sensor.podAnnotations" . | nindent 8 }}
      labels:
        {{- include "runtime-sensor.selectorLabels" . | nindent 8 }}
        {{- include "runtime-sensor.podLabels" . | nindent 8 }}
        control-plane: runtime-sensor
    spec:
      tolerations:
      {{- if and .Values.tolerations }}
        {{- .Values.tolerations | toYaml | nindent 8 }}
      {{- else }}
        - operator: Exists
      {{- end }}
      {{- if and .Values.imagePullSecret }}
      imagePullSecrets:
        - name: "{{ .Values.imagePullSecret }}"
      {{- end }}
      containers:
        - name: runtime-sensor
          imagePullPolicy: IfNotPresent
          {{- if .Values.sensor.extraArgs }}
          args:
            {{- .Values.sensor.extraArgs | toYaml | nindent 12 }}
          {{-  end  }}
          {{- if and .Values.sensor.image.repository .Values.sensor.image.tag }}
          image: "{{ .Values.sensor.image.repository }}:{{ .Values.sensor.image.tag | default .Chart.AppVersion }}"
          {{- else }}
          image: "{{ .Values.sensor.image.repository }}"
          {{- end }}
          resources:
            requests:
              memory: "{{ .Values.sensor.resources.requests.memory }}"
              cpu: "{{ .Values.sensor.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.sensor.resources.limits.memory }}"
              cpu: "{{ .Values.sensor.resources.limits.cpu }}"
          securityContext:
            {{- if .Values.securityContext.privileged }}
            privileged: true
            {{- else }}
            capabilities:
              add:
              {{- with .Values.securityContext.capabilities }}
              {{- toYaml . | nindent 16 }}
              {{- end }}
              drop:
                - ALL
            {{- end }}
          volumeMounts:
            - name: boot-host
              mountPath: /boot.host
              readOnly: true
            - name: sysfs
              mountPath: /sys
              readOnly: true
            {{- include "runtime-sensor.additionalVolumeMounts" . | nindent 12 }}
          env:
            - name: SNYK_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ required "A snykToken is required! Please provide a value" .Values.secretName }}
                  key: "snykToken"
            - name: GROUPS_SCOPES
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName }}
                  key: "groupsScopes"
                  optional: true
            - name: CLUSTER_NAME
              value: "{{ .Values.clusterName }}"
            - name: SNYK_GROUP_ID
              value: "{{ .Values.snykGroupId }}"
            - name: SNYK_API_BASE_URL
              value: "{{ .Values.snykAPIBaseURL }}"
            - name: SNYK_DEBUG
              value: "{{ .Values.debug }}"
          envFrom:
          - configMapRef:
              name: env-config-map
              optional: true
      hostPID: true
      serviceAccountName: {{ template "runtime-sensor.serviceAccountName" . }}
      volumes:
        - name: boot-host
          hostPath:
            path: /
        - name: sysfs
          hostPath:
            path: /sys
        {{- include "runtime-sensor.additionalVolumes" . | nindent 8 }}
